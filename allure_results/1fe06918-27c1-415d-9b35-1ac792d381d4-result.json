{"name": "Создание заказа с переходом через хедер и кнопку на странице", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"Button_Button__ra12g Button_Middle__1CSJM\">...</button> is not clickable at point (1187, 545). Other element would receive the click: <button class=\"Button_Button__ra12g Button_Middle__1CSJM\">...</button>\n  (Session info: chrome=126.0.6478.61)\nStacktrace:\n\tGetHandleVerifier [0x00700F03+27667]\n\t(No symbol) [0x00696C04]\n\t(No symbol) [0x00591AFF]\n\t(No symbol) [0x005D8BB2]\n\t(No symbol) [0x005D6F3D]\n\t(No symbol) [0x005D4DCB]\n\t(No symbol) [0x005D4377]\n\t(No symbol) [0x005C911F]\n\t(No symbol) [0x005F392C]\n\t(No symbol) [0x005C8BA5]\n\t(No symbol) [0x005F3BC4]\n\t(No symbol) [0x0060CAC7]\n\t(No symbol) [0x005F36C6]\n\t(No symbol) [0x005C74D1]\n\t(No symbol) [0x005C804D]\n\tGetHandleVerifier [0x009B3D83+2857619]\n\tGetHandleVerifier [0x00A07EED+3202045]\n\tGetHandleVerifier [0x00784704+566292]\n\tGetHandleVerifier [0x0078B8FC+595468]\n\t(No symbol) [0x0069F9F4]\n\t(No symbol) [0x0069C708]\n\t(No symbol) [0x0069C8A7]\n\t(No symbol) [0x0068E79E]\n\tBaseThreadInitThunk [0x76D97BA9+25]\n\tRtlInitializeExceptionChain [0x7782C10B+107]\n\tRtlClearBits [0x7782C08F+191]", "trace": "self = <tests.test_order_page.TestOrderPage object at 0x000002214E73A430>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c5d5e5b4dca5894bf9eac9a584f93fa\")>\nbutton_order = ['xpath', './/div[contains(@class, \"Header_Nav\")]/button[text()=\"Заказать\"]']\n\n    @allure.title(\"Создание заказа с переходом через хедер и кнопку на странице\")\n    @pytest.mark.parametrize(\"button_order\", [\n        MainPageLocators.BUTTON_ORDER_LOCATOR,\n        HeaderPageLocators.BUTTON_ORDER_LOCATORS\n    ])\n    def test_create_order(self, driver, button_order):\n        order_page = OrderPage(driver)\n        order_page.driver.get(url[\"main_page\"])\n        order_page.create_order(button_order)\n>       order_page.check_order()\n\ntests\\test_order_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\order_page.py:48: in check_order\n    self.click_to_element(OrderPageLocators.BUTTON_ORDER_LOCATOR)\npages\\base_page.py:17: in click_to_element\n    WebDriverWait(self.driver, 3).until(ec.element_to_be_clickable(locator)).click()\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002214E77D9A0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...dInitThunk [0x76D97BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7782C10B+107]\\\\n\\\\tRtlClearBits [0x7782C08F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"Button_Button__ra12g Button_Middle__1CSJM\">...</button> is not clickable at point (1187, 545). Other element would receive the click: <button class=\"Button_Button__ra12g Button_Middle__1CSJM\">...</button>\nE         (Session info: chrome=126.0.6478.61)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00700F03+27667]\nE       \t(No symbol) [0x00696C04]\nE       \t(No symbol) [0x00591AFF]\nE       \t(No symbol) [0x005D8BB2]\nE       \t(No symbol) [0x005D6F3D]\nE       \t(No symbol) [0x005D4DCB]\nE       \t(No symbol) [0x005D4377]\nE       \t(No symbol) [0x005C911F]\nE       \t(No symbol) [0x005F392C]\nE       \t(No symbol) [0x005C8BA5]\nE       \t(No symbol) [0x005F3BC4]\nE       \t(No symbol) [0x0060CAC7]\nE       \t(No symbol) [0x005F36C6]\nE       \t(No symbol) [0x005C74D1]\nE       \t(No symbol) [0x005C804D]\nE       \tGetHandleVerifier [0x009B3D83+2857619]\nE       \tGetHandleVerifier [0x00A07EED+3202045]\nE       \tGetHandleVerifier [0x00784704+566292]\nE       \tGetHandleVerifier [0x0078B8FC+595468]\nE       \t(No symbol) [0x0069F9F4]\nE       \t(No symbol) [0x0069C708]\nE       \t(No symbol) [0x0069C8A7]\nE       \t(No symbol) [0x0068E79E]\nE       \tBaseThreadInitThunk [0x76D97BA9+25]\nE       \tRtlInitializeExceptionChain [0x7782C10B+107]\nE       \tRtlClearBits [0x7782C08F+191]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Создание заказа", "status": "passed", "steps": [{"name": "Смена страницы", "status": "passed", "parameters": [{"name": "button_order", "value": "['xpath', './/div[contains(@class, \"Header_Nav\")]/button[text()=\"Заказать\"]']"}], "start": 1718447656443, "stop": 1718447656497}, {"name": "Выбор станции метро", "status": "passed", "start": 1718447656645, "stop": 1718447656737}, {"name": "Выбор_даты", "status": "passed", "start": 1718447656844, "stop": 1718447656977}, {"name": "Выбрать срок аренды", "status": "passed", "start": 1718447656977, "stop": 1718447657044}], "parameters": [{"name": "button_order", "value": "['xpath', './/div[contains(@class, \"Header_Nav\")]/button[text()=\"Заказать\"]']"}], "start": 1718447656403, "stop": 1718447657203}, {"name": "Проверить заказ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"Button_Button__ra12g Button_Middle__1CSJM\">...</button> is not clickable at point (1187, 545). Other element would receive the click: <button class=\"Button_Button__ra12g Button_Middle__1CSJM\">...</button>\n  (Session info: chrome=126.0.6478.61)\nStacktrace:\n\tGetHandleVerifier [0x00700F03+27667]\n\t(No symbol) [0x00696C04]\n\t(No symbol) [0x00591AFF]\n\t(No symbol) [0x005D8BB2]\n\t(No symbol) [0x005D6F3D]\n\t(No symbol) [0x005D4DCB]\n\t(No symbol) [0x005D4377]\n\t(No symbol) [0x005C911F]\n\t(No symbol) [0x005F392C]\n\t(No symbol) [0x005C8BA5]\n\t(No symbol) [0x005F3BC4]\n\t(No symbol) [0x0060CAC7]\n\t(No symbol) [0x005F36C6]\n\t(No symbol) [0x005C74D1]\n\t(No symbol) [0x005C804D]\n\tGetHandleVerifier [0x009B3D83+2857619]\n\tGetHandleVerifier [0x00A07EED+3202045]\n\tGetHandleVerifier [0x00784704+566292]\n\tGetHandleVerifier [0x0078B8FC+595468]\n\t(No symbol) [0x0069F9F4]\n\t(No symbol) [0x0069C708]\n\t(No symbol) [0x0069C8A7]\n\t(No symbol) [0x0068E79E]\n\tBaseThreadInitThunk [0x76D97BA9+25]\n\tRtlInitializeExceptionChain [0x7782C10B+107]\n\tRtlClearBits [0x7782C08F+191]\n\n", "trace": "  File \"c:\\users\\vovak\\desktop\\practicum\\sprint_6\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\vovak\\Desktop\\Practicum\\sprint_6\\pages\\order_page.py\", line 48, in check_order\n    self.click_to_element(OrderPageLocators.BUTTON_ORDER_LOCATOR)\n  File \"C:\\Users\\vovak\\Desktop\\Practicum\\sprint_6\\pages\\base_page.py\", line 17, in click_to_element\n    WebDriverWait(self.driver, 3).until(ec.element_to_be_clickable(locator)).click()\n  File \"c:\\users\\vovak\\desktop\\practicum\\sprint_6\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"c:\\users\\vovak\\desktop\\practicum\\sprint_6\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"c:\\users\\vovak\\desktop\\practicum\\sprint_6\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\vovak\\desktop\\practicum\\sprint_6\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1718447657203, "stop": 1718447658251}], "parameters": [{"name": "button_order", "value": "['xpath', './/div[contains(@class, \"Header_Nav\")]/button[text()=\"Заказать\"]']"}], "start": 1718447655596, "stop": 1718447658251, "uuid": "e677fa42-a3f8-453f-85b4-6e08980c1420", "historyId": "3e26c4f154a219c9e26c26060d7bd138", "testCaseId": "fa2eaeb1e53ec3b2e104d328e9706fec", "fullName": "tests.test_order_page.TestOrderPage#test_create_order", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderPage"}, {"name": "host", "value": "Device_00"}, {"name": "thread", "value": "12960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}